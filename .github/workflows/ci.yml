name: CI Workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:

  

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install node dependencies
        run: npm install  

      - name: Run ESLint
        run: npm run lint
  
  # Lint our Dockerfile using Hadolint
  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install node dependencies and run Tests
        # Install dependencies and run unit tests in one step
        run: npm install-ci-test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - name: Install node dependencies
        # NOTE: we need to install dev dependencies too vs. production only for hurl
        run: npm install
      - name: Build Containers
        run: docker compose up -d
      - name: Change Setup file permissions
        run: chmod +x ./scripts/local-aws-setup.sh
      - name: Setup Local AWS Resources
        # NOTE: this file needs to be made executable *before* you check into git:
        # $ chmod +x ./scripts/local-aws-setup.sh
        run: ./scripts/local-aws-setup.sh
      - name: Run Hurl Tests
        run: npm run test:integration      
       
  # New job to build and push Docker image to Docker Hub
  docker-hub:
    name: Build and Push to Docker Hub
    # Don't bother running this job unless the other three all pass
    needs: [lint, dockerfile-lint, unit-tests, integration-tests]
    
    runs-on: ubuntu-latest
    steps:
      # Set up buildx for optimal Docker Builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub using GitHub secrets
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push the Docker image to Docker Hub
      - name: Build and push
        env:
          # Define Environment Variable with Docker Hub Repo
          DOCKERHUB_REPO: kabir021/fragments  # Your Docker Hub repository
          
          # Define Environment Variable with the current Git commit SHA
          SHA_TAG: sha-${{ github.sha }}  # This gets the Git commit SHA using GitHub context
          
        uses: docker/build-push-action@v6
        with:
          push: true
          # Use 3 tags: commit SHA, main, and latest
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }}, ${{ env.DOCKERHUB_REPO }}:main, ${{ env.DOCKERHUB_REPO }}:latest
